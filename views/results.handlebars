<nav class="navbar navbar-expand-lg navbar-light bg-light">
  <a class="navbar-brand" href="/">Project2</a>
  <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
    <span class="navbar-toggler-icon"></span>
  </button>
  <div class="collapse navbar-collapse" id="navbarNav">
    <ul class="navbar-nav">
      <li class="nav-item active">
        <a class="nav-link" href="/">Home <span class="sr-only">(current)</span></a>
      </li>
      {{#if loggedIn}}
      <li class="nav-item">
        <a class="nav-link" href="/user">Profile</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="/logout">Log Out</a>
      </li>
      {{else}}
      <li class="nav-item">
        <a class="nav-link" href="/login">Log In</a>
      </li>
      {{/if}}
    </ul>
  </div>
</nav>

<div id="home">
  <div class="container">
    <div class="row">
      <div class="col-8 offset-2">
        <div id="map-canvas"></div>
        <h1>{{msg}}</h1>
        <h2>This is our Home Page!</h2>
        <form class="clearfix mb-4" action="POST">
          <div class="form-group">
            <label for="example-text">Example Text</label>
            <input type="text" id="example-text" class="form-control" aria-describedby="example-text" placeholder="Enter Example Text">
          </div>
          <div class="form-group">
            <label for="example-description">Example Description</label>
            <textarea class="form-control" id="example-description" aria-describedby="example-description" placeholder="Enter Example Description"></textarea>
          </div>
          <button id="submit" class="btn btn-primary float-right">Submit</button>
        </form>
        <h3>Examples:</h3>
        <ul id="example-list" class="list-group">
          {{#each examples}}
          <li data-id="{{this.id}}" class="list-group-item">
            <a href="example/{{this.id}}">{{this.text}}</a>
            <button class="btn btn-danger float-right delete">ï½˜</button>
          </li>
          {{/each}}

          <p>
            Current location <span id="latitude"></span>&deg;,
            <span id="longitude"></span>&deg;.
          </p>
          <p>
            It is <span id="summary"></span> with
            a temperature of <span id="temp"></span>&deg; F.
          </p>
          <p>
            It will be <span id="forecast"></span>.
          </p>
          <p>
            The Sun will rise at <span id="sunrise"></span> minutes.
          </p>
          <p>
            The Sun will set at <span id="sunset"></span> minutes.
          </p>
          <p>
            The current Moon phase is <span id="moonphase"></span>.
          </p>
            <button id="geolocate">Check here</button>
            
        </ul>
      </div>
    </div>
  </div>
</div>

  <script>
// Geo Locate
let lat, lon;
if ('geolocation' in navigator) {
  console.log('geolocation available');
  navigator.geolocation.getCurrentPosition(async position => {
    let lat, lon, weather, forecast;
    try {
      lat = position.coords.latitude;
      lon = position.coords.longitude;
      document.getElementById('latitude').textContent = lat.toFixed(2);
      document.getElementById('longitude').textContent = lon.toFixed(2);
      const api_url_camp = `campgrounds/${lat},${lon}`
      const response_camp = await fetch(api_url_camp);
      const json_camp = await response_camp.json();
      let campgroundArray = new Array();
      for (let camp of json_camp) {
        let campgroundTemp = new Array();
        console.log(camp.$.latitude);
        console.log(camp);
        let campgroundName = camp.$.facilityName;
        let campgroundLat = camp.$.latitude;
        let campgroundLon = camp.$.longitude;
        let campgroundZ = 3;
        campgroundTemp.push(campgroundName)
        campgroundTemp.push(campgroundLat)
        campgroundTemp.push(campgroundLon)
        campgroundTemp.push(campgroundZ);
        console.log(campgroundTemp);
        campgroundArray.push(campgroundTemp);
      }
      setMarkers(map, campgroundArray);
      const api_url = `weather/${lat},${lon}`;
      const response = await fetch(api_url);
      const json = await response.json();
      forecast = json.weather.daily;
      weather = json.weather.currently;
      document.getElementById('summary').textContent = weather.summary;
      document.getElementById('temp').textContent = weather.temperature;
      document.getElementById('forecast').textContent = forecast.data[0].summary;
      document.getElementById('sunrise').textContent = forecast.data[0].sunriseTime;
      document.getElementById('sunset').textContent = forecast.data[0].sunsetTime;
      document.getElementById('moonphase').textContent = forecast.data[0].moonPhase;

    } catch (error) {
      console.log(error);
    }

    const data = { lat, lon, weather, forecast };
    const options = {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(data)
    };
    const db_response = await fetch('/api', options);
    const db_json = await db_response.json();
    console.log(db_json);
  });
} else {
  console.log('geolocation not available');
}
</script>
<script src="https://code.jquery.com/jquery-2.1.1.min.js"></script>
<script src="/js/materialize.js"></script>
<script src="/js/init.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="/js/index.js"></script>