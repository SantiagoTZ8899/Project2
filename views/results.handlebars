<div id="index-banner"class="parallax-container">
  <div class="section no-pad-bot">
    <div class="container">  
      
      <div class="dropdown">
        <i class="dropdown-trigger fa fa-bars fa-4x burger-menu" data-target='dropdown'></i>  
        <ul class="dropdown-content" id="dropdown">
          <li class="nav-item active">
            <a class="nav-link" href="/">Home <span class="sr-only">(current)</span></a>
          </li>
          {{#if loggedIn}}
          <li class="nav-item">
            <a class="nav-link" href="/user">Profile</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/logout">Log Out</a>
          </li>
          {{else}}
          <li class="nav-item">
            <a class="nav-link" href="/login">Log In</a>
          </li>
          {{/if}}
        </ul>
      </div>

      <div id="home">
        <div class="container float-text exoFont">
          <div class="section">
            <div class="row">
              <div id="map-canvas"></div>
              <div class="col s12 center exoFont">
                <div class="card eventsCard horizontal">
                  <div class = "card-stacked">
                    <h5 class="card-title">Placeholder Title</h5>
                        <p><strong>Current Location</strong>: PLACEHOLDER</p>
                        <p><strong>Start Date</strong>: PLACEHOLDER</p>
                        <p><strong>End Date</strong>: PLACEHOLDER</p>
                        <p><strong>Weather Conditions</strong>: PLACEHOLDER</p>
                        <p><strong>Temperature</strong>: PLACEHOLDER</p>
                        <p><strong>Sunrise</strong>: PLACEHOLDER</p>
                        <p><strong>Sunset</strong>: PLACEHOLDER</p>
                        <button id="geolocate">Check here</button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="parallax"><img src="/images/resultsbkgrd.jpg" alt="Unsplashed background img 1"></div>
  </div>
</div>

  <script>
// Geo Locate
let lat, lon;
if ('geolocation' in navigator) {
  console.log('geolocation available');
  navigator.geolocation.getCurrentPosition(async position => {
    let lat, lon, weather, forecast;
    try {
      lat = position.coords.latitude;
      lon = position.coords.longitude;
      document.getElementById('latitude').textContent = lat.toFixed(2);
      document.getElementById('longitude').textContent = lon.toFixed(2);
      const api_url_camp = `campgrounds/${lat},${lon}`
      const response_camp = await fetch(api_url_camp);
      const json_camp = await response_camp.json();
      let campgroundArray = new Array();
      for (let camp of json_camp) {
        let campgroundTemp = new Array();
        console.log(camp.$.latitude);
        console.log(camp);
        let campgroundName = camp.$.facilityName;
        let campgroundLat = camp.$.latitude;
        let campgroundLon = camp.$.longitude;
        let campgroundZ = 3;
        campgroundTemp.push(campgroundName)
        campgroundTemp.push(campgroundLat)
        campgroundTemp.push(campgroundLon)
        campgroundTemp.push(campgroundZ);
        console.log(campgroundTemp);
        campgroundArray.push(campgroundTemp);
      }
      setMarkers(map, campgroundArray);
      const api_url = `weather/${lat},${lon}`;
      const response = await fetch(api_url);
      const json = await response.json();
      forecast = json.weather.daily;
      weather = json.weather.currently;
      document.getElementById('summary').textContent = weather.summary;
      document.getElementById('temp').textContent = weather.temperature;
      document.getElementById('forecast').textContent = forecast.data[0].summary;
      document.getElementById('sunrise').textContent = forecast.data[0].sunriseTime;
      document.getElementById('sunset').textContent = forecast.data[0].sunsetTime;
      document.getElementById('moonphase').textContent = forecast.data[0].moonPhase;

    } catch (error) {
      console.log(error);
    }

    const data = { lat, lon, weather, forecast };
    const options = {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(data)
    };
    const db_response = await fetch('/api', options);
    const db_json = await db_response.json();
    console.log(db_json);
  });
} else {
  console.log('geolocation not available');
}
</script>
<script src="https://code.jquery.com/jquery-2.1.1.min.js"></script>
<script src="/js/materialize.js"></script>
<script src="/js/init.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="/js/index.js"></script>